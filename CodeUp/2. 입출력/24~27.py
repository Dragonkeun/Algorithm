# 24. 단어를 1개 입력받는다.
# 입력받은 단어(영어)의 각 문자를 한줄에 한 문자씩 분리해 출력한다.
# (단, 단어의 문자(영어)를 하나씩 나누어 한 줄에 한 개씩 ' '로 묶어서 출력한다.)
# 입력 :
# 'Boy'
# 출력 :
# 'B'
# 'o'
# 'y'
# Tip::str도 List와 동일하게 배열과 같은 형식으로 접근가능하다. 문자열도 리스트와 같이 iterable 객체이기 때문이다.
# ex) '문자열'[0] >> '문'
# 반복문 for()를 이용하여 문자열의 길이만큼 반복한다.
a = input()
for i in range(len(a)): # for 카운터변수 in range(반복횟수):
    print(a[i]) # 들여쓰기를 하는 곳 까지 반복됨
    
# 25. 다섯 자리의 정수 1개를 입력받아 각 자리별로 나누어 출력한다.
# 입력 :
# 75254
# 출력 :
# [70000]
# [5000]
# [200]
# [50]
# [4]
# Tip::문자열 연산이 가능함을 잊지 말자.
# ex) '문자'*5 >> '문자문자문자문자문자'
integer = input()
count = len(integer)-1 # count는 4
for i in range(len(integer)): # 0~4, 5번 반복
    print(integer[i] + '0'*count) # 7에 0 4개 붙히고, 5에 0 3개 붙히고
    count-=1

# 26. 입력되는 시:분:초 에서 분만 출력해보자.
h, m, s = input().split(':')
print(m)

# 27. 년월일을 출력하는 방법은 나라마다, 형식마다 조금씩 다르다.
# 년월일(yyyy.mm.dd)를 입력받아,
# 일월년(dd-mm-yyyy)로 출력해보자.
# (단, 한 자리 일/월은 0을 붙여 두자리로 출력한다.)
# Tip::조건문 if-else문을 파이썬의 3항 연산자(Chapter 10 참고) 기능을 이용하면 더 간단하게 작성할 수 있다.
# 이렇게 작성하는 것이 메모리 효율성면에서도 효과적이다. (18번 참고)
y, m, d = input().split('.')
# if len(m) == 1:
#     m = '0'+m
# if len(d) == 1:
#     d = '0'+ d
m = '0'+m if len(m) == 1 else m # (true value) if (조건) (false value), m의 길이가 1이면 m = '0'+m, 거짓이면 m
d = '0'+d if len(d) == 1 else d
print('{}-{}-{}'.format(d, m, y))
